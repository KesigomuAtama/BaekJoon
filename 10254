#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
struct data{
	ll x,y,p,q;
	data(int x=0,int y=0):x(x),y(y),p(0),q(0) {}
};
bool cmp(data &a,data &b){
	return a.q*b.p<a.p*b.q||(a.q*b.p==a.p*b.q&&(a.y<b.y||(a.y==b.y&&a.x<b.x)));
}
ll ccw(data &a,data &b,data &c){
	return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);
}
ll dist(data &a,data &b){
	return (b.x-a.x)*(b.x-a.x)+(b.y-a.y)*(b.y-a.y);
}
int main(){
	freopen("input1.txt","r",stdin);
	int T,n,i,a,b,j,N;
	scanf("%d",&T);
	while(T--){
		scanf("%d",&n);
		vector<data> P;
		for(i=0;i<n;i++){
			scanf("%d%d",&a,&b);
			P.push_back(data(a,b));
		}
		sort(P.begin(),P.end(),cmp);
		for(i=1;i<n;i++){
			P[i].p=P[i].x-P[0].x;
			P[i].q=P[i].y-P[0].y;
		}
		sort(P.begin()+1,P.end(),cmp);
		stack<int> S;
		S.push(0);
		S.push(1);
		for(i=2;i<n;i++){
			while(S.size()>=2){
				b=S.top();
				S.pop();
				a=S.top();
				if(ccw(P[a],P[b],P[i])>0){
					S.push(b);
					break;
				}
			}
			S.push(i);
		}
		vector<data> v;
		while(!S.empty()>0){
			v.push_back(P[S.top()]);
			S.pop();
		}
		ll M=0;
		data p1,p2,A,B;
		j=1;
		N=v.size();
		for(i=0;i<N;i++){
			while(1){
				A.x=v[(i+1)%N].x-v[i].x;
				A.y=v[(i+1)%N].y-v[i].y;
				B.x=v[(j+1)%N].x-v[j].x;
				B.y=v[(j+1)%N].y-v[j].y;
				data t;
				if(ccw(t,A,B)<0) j=(j+1)%N; else break;
			}
			ll D=dist(v[i],v[j]);
			if(D>M){
				M=D;
				p1=v[i],p2=v[j];
			}
		}
		printf("%lld %lld %lld %lld\n",p1.x,p1.y,p2.x,p2.y);
	}
	return 0;
}
